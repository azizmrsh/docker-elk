# ===================================================================
# Docker Compose Configuration for ELK Stack (Elasticsearch, Logstash, Kibana)
# ===================================================================
# هذا الملف يحتوي على إعدادات Docker Compose لتشغيل مجموعة ELK Stack
# والتي تتضمن Elasticsearch و Logstash و Kibana مع خدمات الإعداد المساعدة
# ===================================================================

services:

  # ===================================================================
  # خدمة الإعداد الأولي (Setup Service)
  # ===================================================================
  # هذه الخدمة تقوم بتشغيل سكريبت لمرة واحدة فقط لإعداد المستخدمين والأدوار
  # في Elasticsearch مثل 'logstash_internal' و 'kibana_system'
  # باستخدام كلمات المرور المحددة في ملف '.env'
  #
  # ملاحظات مهمة:
  # - تحتاج للتشغيل مرة واحدة فقط عند بدء التشغيل الأول
  # - أي تشغيل لاحق سيعيد تعيين كلمات المرور للقيم المحددة في '.env'
  # - مستبعدة افتراضياً من 'docker compose up'
  # - للتشغيل: استخدم '--profile=setup' أو 'docker compose up setup'
  # ===================================================================
  setup:
    profiles:
      - setup                                    # تحديد البروفايل المطلوب لتشغيل هذه الخدمة
    build:
      context: setup/                          # مجلد البناء الذي يحتوي على Dockerfile
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}    # إصدار Elasticsearch المستخدم من متغير البيئة
    init: true                                 # تفعيل init process لإدارة العمليات بشكل صحيح
    volumes:                                   # ربط الملفات والمجلدات من النظام المضيف
      - ./setup/entrypoint.sh:/entrypoint.sh:ro,Z    # سكريبت نقطة الدخول (للقراءة فقط)
      - ./setup/lib.sh:/lib.sh:ro,Z                  # مكتبة الدوال المساعدة (للقراءة فقط)
      - ./setup/roles:/roles:ro,Z                    # ملفات تعريف الأدوار (للقراءة فقط)
    environment:                               # متغيرات البيئة المطلوبة للإعداد
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}                    # كلمة مرور المستخدم الرئيسي
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}  # كلمة مرور Logstash الداخلية
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}        # كلمة مرور نظام Kibana
      METRICBEAT_INTERNAL_PASSWORD: ${METRICBEAT_INTERNAL_PASSWORD:-}  # كلمة مرور Metricbeat
      FILEBEAT_INTERNAL_PASSWORD: ${FILEBEAT_INTERNAL_PASSWORD:-}      # كلمة مرور Filebeat
      HEARTBEAT_INTERNAL_PASSWORD: ${HEARTBEAT_INTERNAL_PASSWORD:-}    # كلمة مرور Heartbeat
      MONITORING_INTERNAL_PASSWORD: ${MONITORING_INTERNAL_PASSWORD:-}  # كلمة مرور المراقبة
      BEATS_SYSTEM_PASSWORD: ${BEATS_SYSTEM_PASSWORD:-}          # كلمة مرور نظام Beats
    network_mode: service:elasticsearch        # استخدام نفس شبكة خدمة Elasticsearch
    depends_on:                               # الاعتماد على خدمات أخرى
      - elasticsearch                         # يجب تشغيل Elasticsearch أولاً

  # ===================================================================
  # خدمة توليد مفاتيح التشفير لـ Kibana (Kibana Encryption Keys Generator)
  # ===================================================================
  # هذه الخدمة تقوم بتشغيل أمر لمرة واحدة لتوليد وطباعة مفاتيح التشفير
  # المطلوبة لـ Kibana لحماية البيانات الحساسة
  #
  # ملاحظات:
  # - مستبعدة افتراضياً من 'docker compose up'
  # - للتشغيل: استخدم '--profile=setup' أو 'docker compose up kibana-genkeys'
  # ===================================================================
  kibana-genkeys:
    profiles:
      - setup                                    # تحديد البروفايل المطلوب (setup)
    build:
      context: kibana/                         # مجلد البناء الخاص بـ Kibana
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}    # إصدار Elasticsearch المتوافق
    command:                                   # الأمر المطلوب تنفيذه
      - bin/kibana-encryption-keys             # تشغيل أداة توليد مفاتيح التشفير
      - generate                               # أمر التوليد
    network_mode: none                        # لا تحتاج اتصال شبكة

  # ===================================================================
  # خدمة Elasticsearch (محرك البحث والفهرسة)
  # ===================================================================
  # Elasticsearch هو محرك البحث والتحليل الموزع المبني على Apache Lucene
  # يقوم بتخزين وفهرسة وتحليل البيانات بسرعة عالية
  # ===================================================================
  elasticsearch:
    build:
      context: elasticsearch/                  # مجلد البناء الخاص بـ Elasticsearch
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}    # إصدار Elasticsearch المطلوب
    volumes:                                   # ربط الملفات والبيانات
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z  # ملف الإعدادات (للقراءة فقط)
      - elasticsearch:/usr/share/elasticsearch/data:Z    # مجلد البيانات المستمرة
    ports:                                     # المنافذ المكشوفة
      - 9200:9200                             # منفذ HTTP API الرئيسي للاستعلامات
      - 9300:9300                             # منفذ النقل للتواصل بين العقد
    environment:                               # متغيرات البيئة
      node.name: bms-elasticsearch-node        # اسم العقدة في الكلاستر
      ES_JAVA_OPTS: -Xms8g -Xmx8g            # تحسين الذاكرة: 8GB للاستفادة من موارد VPS
      # كلمة مرور Bootstrap للتهيئة الأولية
      # تستخدم لتهيئة keystore عند بدء التشغيل الأول فقط
      # يتم تجاهلها في التشغيلات اللاحقة
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}  # كلمة مرور المستخدم الرئيسي
      # استخدام اكتشاف العقدة الواحدة لتعطيل وضع الإنتاج وتجنب فحوصات Bootstrap
      # راجع: https://www.elastic.co/docs/deploy-manage/deploy/self-managed/bootstrap-checks
      discovery.type: single-node              # نوع الاكتشاف (عقدة واحدة للتطوير)
      # إعدادات تحسين الأداء
      indices.memory.index_buffer_size: 20%
      indices.memory.min_index_buffer_size: 96mb
      # تحسين الفهرسة والبحث
      index.refresh_interval: 30s
      index.number_of_shards: 1
      index.number_of_replicas: 0
    deploy:
      resources:
        limits:
          memory: 12g                          # حد أقصى 12GB للذاكرة
          cpus: '4.0'                         # حد أقصى 4 أنوية من المعالج
        reservations:
          memory: 8g                           # حجز 8GB من الذاكرة
          cpus: '2.0'                         # حجز 2 أنوية من المعالج
    networks:
      - elk                                    # الشبكة المشتركة مع باقي خدمات ELK
    restart: unless-stopped                    # إعادة التشغيل التلقائي إلا في حالة الإيقاف اليدوي

  # ===================================================================
  # خدمة Logstash (معالج ومحول البيانات)
  # ===================================================================
  # Logstash هو أداة معالجة البيانات من جانب الخادم تقوم بجمع البيانات
  # من مصادر متعددة، تحويلها، وإرسالها إلى وجهات مختلفة مثل Elasticsearch
  # ===================================================================
  logstash:
    build:
      context: logstash/                       # مجلد البناء الخاص بـ Logstash
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}    # إصدار متوافق مع Elasticsearch
    volumes:                                   # ربط ملفات الإعدادات والبيانات
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z      # ملف الإعدادات الرئيسي
      - ./logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro,Z    # إعدادات خطوط المعالجة
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,Z                            # ملفات خطوط المعالجة
      - ./logstash/drivers:/usr/share/logstash/drivers:ro,Z                              # تعريفات قواعد البيانات
    ports:                                     # المنافذ المكشوفة
      - 5044:5044                             # منفذ Beats input (Filebeat, Metricbeat)
      - 50000:50000/tcp                       # منفذ TCP للبيانات المخصصة
      - 50000:50000/udp                       # منفذ UDP للبيانات المخصصة
      - 9600:9600                             # منفذ API للمراقبة والإدارة
    environment:                               # متغيرات البيئة
      LS_JAVA_OPTS: -Xms4g -Xmx4g             # تحسين الذاكرة: 4GB للمعالجة السريعة
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}  # كلمة مرور للاتصال بـ Elasticsearch
    deploy:
      resources:
        limits:
          memory: 6g                           # حد أقصى 6GB للذاكرة
          cpus: '2.0'                         # حد أقصى 2 أنوية من المعالج
        reservations:
          memory: 4g                           # حجز 4GB من الذاكرة
          cpus: '1.0'                         # حجز 1 نواة من المعالج
    networks:
      - elk                                    # الشبكة المشتركة
    depends_on:                               # الاعتماد على خدمات أخرى
      - elasticsearch                         # يحتاج Elasticsearch للعمل أولاً
    restart: unless-stopped                    # إعادة التشغيل التلقائي

  # ===================================================================
  # خدمة Kibana (واجهة المستخدم والتصور)
  # ===================================================================
  # Kibana هو أداة تصور البيانات وإدارة Elasticsearch
  # يوفر واجهة ويب لاستكشاف وتحليل وتصور البيانات المخزنة في Elasticsearch
  # ===================================================================
  kibana:
    build:
      context: kibana/                         # مجلد البناء الخاص بـ Kibana
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}    # إصدار متوافق مع Elasticsearch
    volumes:                                   # ربط ملفات الإعدادات
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z  # ملف الإعدادات الرئيسي
    ports:                                     # المنافذ المكشوفة
      - 5601:5601                             # منفذ واجهة الويب الرئيسي
    environment:                               # متغيرات البيئة
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}  # كلمة مرور نظام Kibana للاتصال بـ Elasticsearch
    deploy:
      resources:
        limits:
          memory: 4g                           # حد أقصى 4GB للذاكرة
          cpus: '1.0'                         # حد أقصى 1 نواة من المعالج
        reservations:
          memory: 2g                           # حجز 2GB من الذاكرة
          cpus: '0.5'                         # حجز نصف نواة من المعالج
    networks:
      - elk                                    # الشبكة المشتركة
    depends_on:                               # الاعتماد على خدمات أخرى
      - elasticsearch                         # يحتاج Elasticsearch للعمل أولاً
    restart: unless-stopped                    # إعادة التشغيل التلقائي

# ===================================================================
# إعدادات الشبكات (Networks Configuration)
# ===================================================================
# تعريف الشبكات المستخدمة للتواصل بين الخدمات
# ===================================================================
networks:
  elk:                                       # شبكة ELK المشتركة
    driver: bridge                           # نوع الشبكة (bridge للتواصل المحلي)

# ===================================================================
# إعدادات المجلدات المستمرة (Persistent Volumes)
# ===================================================================
# تعريف المجلدات التي تحتفظ بالبيانات حتى بعد إعادة تشغيل الحاويات
# ===================================================================
volumes:
  elasticsearch:                             # مجلد بيانات Elasticsearch المستمر
