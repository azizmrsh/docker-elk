input {
  jdbc {
    jdbc_driver_library => "/usr/share/logstash/drivers/mysql-connector-j-8.0.33.jar"
    jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://145.223.98.97:3306/bms?useSSL=false&allowPublicKeyRetrieval=true&characterEncoding=UTF-8"
    jdbc_user => "bms"
    jdbc_password => "bms2025"
    
    # Simple query for testing - just pages with books
    statement => "
      SELECT 
        p.id as page_id,
        p.book_id,
        p.page_number,
        p.content,
        b.title as book_title,
        'Unknown Author' as author_name,
        p.updated_at
      FROM pages p
      INNER JOIN books b ON p.book_id = b.id
      WHERE p.content IS NOT NULL 
        AND p.content != ''
        AND CHAR_LENGTH(p.content) > 10
        AND (:sql_last_value IS NULL OR p.updated_at > :sql_last_value)
      ORDER BY p.updated_at ASC
      LIMIT 10
    "
    
    # Schedule to run every minute for testing
    schedule => "* * * * *"
    
    # Track the last update
    use_column_value => true
    tracking_column => "updated_at"
    tracking_column_type => "timestamp"
    last_run_metadata_path => "/usr/share/logstash/data/.logstash_jdbc_last_run_pages"
    
    # Character encoding
    charset => "UTF-8"
    
    # Add type to distinguish this input
    type => "book_page"
  }
}

filter {
  if [type] == "book_page" {
    # Essential processing only for fast indexing
    mutate {
      remove_field => ["@version"]
      convert => { 
        "page_id" => "string" 
        "book_id" => "string"
        "page_number" => "integer"
      }
    }
    
    # Create searchable content field for Arabic text
    mutate {
      add_field => { "search_text" => "%{content}" }
      add_field => { "document_title" => "%{book_title} - صفحة %{page_number}" }
    }
    
    # Parse update date only
    if [updated_at] {
      date {
        match => [ "updated_at", "yyyy-MM-dd HH:mm:ss" ]
        target => "updated_at"
      }
    }
  }
}

output {
  if [type] == "book_page" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      user => "logstash_internal"
      password => "${LOGSTASH_INTERNAL_PASSWORD}"
      index => "book-pages"
      document_id => "%{page_id}"
    }
  }
}
